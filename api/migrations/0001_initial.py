# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-26 07:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Checker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('source', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Compiler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('arguments', models.CharField(max_length=1000)),
                ('path', models.CharField(max_length=1000)),
                ('file_extension', models.CharField(default='', max_length=10)),
                ('exec_extension', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('visible', models.BooleanField(default=False)),
                ('frozen_time', models.IntegerField(default=0, verbose_name='Frozen time (minutes)')),
                ('death_time', models.IntegerField(default=0, verbose_name='Death time (minutes)')),
                ('closed', models.BooleanField(default=False, verbose_name='Closed registration')),
                ('allow_teams', models.BooleanField(default=False, verbose_name='Allow teams')),
                ('rated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ContestInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(null=True)),
                ('real', models.BooleanField()),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='api.Contest')),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=50)),
                ('rating', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('country', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=250)),
                ('body', models.TextField()),
                ('date', models.DateTimeField(auto_now=True)),
                ('saw', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('body', models.TextField(blank=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('show_in_main_page', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('body', models.TextField(blank=True)),
                ('input', models.TextField(blank=True)),
                ('output', models.TextField(blank=True)),
                ('hints', models.TextField(blank=True, null=True)),
                ('time_limit', models.PositiveIntegerField(verbose_name='Time limit (s)')),
                ('memory_limit', models.PositiveIntegerField(verbose_name='Memory limit (MB)')),
                ('position', models.IntegerField()),
                ('balloon', models.CharField(max_length=50, verbose_name='Balloon color')),
                ('slug', models.SlugField(max_length=100, null=True)),
                ('checker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Checker')),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='api.Contest')),
            ],
        ),
        migrations.CreateModel(
            name='RatingChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('nick', models.CharField(max_length=20)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_changes', to='api.Contest')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=250, null=True)),
                ('color', models.CharField(max_length=50)),
                ('penalty', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('execution_time', models.IntegerField(default=0)),
                ('memory_used', models.IntegerField(default=0)),
                ('source', models.TextField()),
                ('public', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('judgement_details', models.TextField(null=True)),
                ('compiler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Compiler')),
                ('instance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.ContestInstance')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.Problem')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Result')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('browser', 'Code Browser')], max_length=10, null=True)),
                ('theme', models.CharField(choices=[('hopscotch', 'hopscotch'), ('ttcn', 'ttcn'), ('ambiance-mobile', 'ambiance-mobile'), ('paraiso-light', 'paraiso-light'), ('icecoder', 'icecoder'), ('zenburn', 'zenburn'), ('erlang-dark', 'erlang-dark'), ('seti', 'seti'), ('midnight', 'midnight'), ('tomorrow-night-bright', 'tomorrow-night-bright'), ('panda-syntax', 'panda-syntax'), ('bespin', 'bespin'), ('ambiance', 'ambiance'), ('neo', 'neo'), ('solarized', 'solarized'), ('base16-light', 'base16-light'), ('vibrant-ink', 'vibrant-ink'), ('abcdef', 'abcdef'), ('yeti', 'yeti'), ('mbo', 'mbo'), ('xq-light', 'xq-light'), ('twilight', 'twilight'), ('rubyblue', 'rubyblue'), ('base16-dark', 'base16-dark'), ('neat', 'neat'), ('dracula', 'dracula'), ('cobalt', 'cobalt'), ('lesser-dark', 'lesser-dark'), ('3024-night', '3024-night'), ('pastel-on-dark', 'pastel-on-dark'), ('liquibyte', 'liquibyte'), ('colorforth', 'colorforth'), ('blackboard', 'blackboard'), ('monokai', 'monokai'), ('xq-dark', 'xq-dark'), ('elegant', 'elegant'), ('3024-day', '3024-day'), ('night', 'night'), ('mdn-like', 'mdn-like'), ('tomorrow-night-eighties', 'tomorrow-night-eighties'), ('isotope', 'isotope'), ('material', 'material'), ('eclipse', 'eclipse'), ('paraiso-dark', 'paraiso-dark'), ('railscasts', 'railscasts'), ('the-matrix', 'the-matrix')], max_length=20, null=True, verbose_name='Code Editor Theme')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user/avatar', verbose_name='Avatar')),
                ('show_tags', models.BooleanField(default=True, verbose_name='Show tags')),
                ('compiler', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Compiler', verbose_name='Compiler')),
                ('institution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Institution', verbose_name='Institution')),
                ('rating_changes', models.ManyToManyField(through='api.RatingChange', to='api.Contest')),
                ('teams', models.ManyToManyField(blank=True, related_name='profiles', to='api.Team')),
            ],
        ),
        migrations.CreateModel(
            name='Validator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('source', models.TextField()),
            ],
        ),
        migrations.AddField(
            model_name='submission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ratingchange',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='api.UserProfile'),
        ),
        migrations.AddField(
            model_name='problem',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='problems', to='api.Tag'),
        ),
        migrations.AddField(
            model_name='problem',
            name='validator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Validator'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contestinstance',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='api.Team'),
        ),
        migrations.AddField(
            model_name='contestinstance',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.Post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='seen',
            field=models.ManyToManyField(related_name='seen_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
    ]
